@inject Blazored.LocalStorage.ISyncLocalStorageService localStorage
@inject HttpClient Http
@inject NavigationManager NavigationManager

@using Models

@if (aves == null)
{
	<p><em>Cargando...</em></p>
}
else
{
	<table class="table">
		<thead>
			<tr>
				<th>Nombre</th>
				<th>Especie</th>
				<th>Edad</th>
				<th>Tipo de Pico</th>
				<th>Vuela?</th>
			</tr>
		</thead>
		<tbody>
			@foreach (var ave in aves)
			{
				<tr>
					<td>@ave.Nombre</td>
					<td>@ave.Especie</td>
					<td>@ave.Edad</td>
					<td>@ave.TipoPico</td>
					<td>@ave.Vuela</td>
					<td>
						<button class = "btn btn-warning"
							@onclick="@(() => NavigationManager.NavigateTo($"animal-editar/{ave.Nombre}"))">
							Editar
						</button>
						
					</td>
					<td>
						<button class="btn btn-danger"
								@onclick="@(() => NavigationManager.NavigateTo($"animal-borrar/{ave.Nombre}"))">
							Borrar
						</button>
					</td>
				</tr>
			}
		</tbody>
	</table>
}


@code {
	private List<Ave> aves = new List<Ave>();
	protected override async Task OnInitializedAsync()
	{
		var aveGuardado = localStorage.GetItem<List<Ave>>("aves");

		if (aveGuardado != null)
		{
			aves = aveGuardado;
		}
	}
}
